apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.codepath.apps.songbirder"
        minSdkVersion 17
        targetSdkVersion 25
        vectorDrawables.useSupportLibrary = true
    }

    // Related to https://github.com/scribejava/scribejava/issues/480
    // Scribe expects Java 7 or this custom Apache library
    lintOptions {
        lintConfig rootProject.file('gradle/lint.xml')
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

repositories {
    jcenter()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext {
    junitVersion = "4.12"
    robolectricVersion = "3.3.2"
    dbflowVersion = "4.0.3"
    oauthHandlerVersion = "1.2.4"
    androidAsyncVersion = "1.4.9"
    appcompatVersion = "25.3.1"
    constraintLayoutVersion = "1.0.2"
    glideVersion = "3.8.0"
    butterknifeVersion = "8.6.0"
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    // DBFlow for simple persistence with an ORM
    annotationProcessor "com.github.Raizlabs.DBFlow:dbflow-processor:$dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow-core:$dbflowVersion"
    compile "com.github.Raizlabs.DBFlow:dbflow:$dbflowVersion"

    // Authorization
    compile "com.codepath.libraries:android-oauth-handler:$oauthHandlerVersion"

    // Design
    compile "com.android.support:appcompat-v7:$appcompatVersion"
    compile "com.android.support:design:$appcompatVersion"
    compile "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"
    compile "com.android.support:recyclerview-v7:$appcompatVersion"

    // Glide for remote image loading
    compile "com.github.bumptech.glide:glide:$glideVersion"

    // Android Async Http for sending async network requests
    compile "com.loopj.android:android-async-http:$androidAsyncVersion"

    // Testing
    testCompile "junit:junit:$junitVersion"
    testCompile "org.robolectric:robolectric:$robolectricVersion"

    // View injection
    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"
}
